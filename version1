const width = 125;
const height = 125;

setDocDimensions(width, height);

// store final lines here
const finalLines = [];



// create a polyline
const polyline = [
  [20, 20],
  [10, 20],
  [10, 37.5],
  [60, 37.5],
  [61, 55],
  [80, 55],
  [90, 40],
  [120, 35],
  [120, 20],
  [115, 20]
];

const t = new bt.Turtle()
  t.jump([30, 11])
  t.arc( 360 , 8)
drawLines(t.lines())

const t2 = new bt.Turtle()
  t2.jump([105, 11])
  t2.arc (360, 8)
drawLines(t2.lines())

const t3 = new bt.Turtle()
  t3.jump([105, 29])
  t3.arc (-80, 11)
drawLines(t3.lines())

const t4 = new bt.Turtle()
  t4.jump([105, 29])
  t4.arc (80, -11)
drawLines(t4.lines())

const t5 = new bt.Turtle()
  t5.jump([30, 29])
  t5.arc (-80, 11)
drawLines(t5.lines())

const t6 = new bt.Turtle()
  t6.jump([30, 29])
  t6.arc (80, -11)
drawLines(t6.lines())

const t7 = new bt.Turtle()
  t7.jump([30, 31])
  t7.arc (80, -13)
drawLines(t7.lines())

const t8 = new bt.Turtle()
  t8.jump([30, 31])
  t8.arc (-80, 13)
drawLines(t8.lines())

const t9 = new bt.Turtle()
  t9.jump([105, 31])
  t9.arc (-80, 13)
drawLines(t9.lines())

const t10 = new bt.Turtle()
  t10.jump([105, 31])
  t10.arc (80, -13)
drawLines(t10.lines())

const ra = bt.randInRange (57, 70)
const rr = bt.randInRange(10, 25)
const rb = bt.randInRange (20, 45)
const rc = bt.randInRange (60, 75)

const starty = ra 
const bwidth = rr*(1.5)
drawLines([
  [[rc, starty], [rc+bwidth, starty]],
  [[rc, rb+starty], [rc, starty]],
  [[rc, rb+starty], [rc+bwidth, rb+starty]],
  [[rc+bwidth, rb+starty], [rc+bwidth, starty]],
])

drawLines([
  [[rc+(bwidth/4), starty], [rc+(bwidth/4), starty+(rb/2)]],
  [[rc+(3*(bwidth/4)), starty+(rb/2)], [rc+(bwidth/4), starty+(rb/2)]],
  [[rc+(3*(bwidth/4)), starty+(rb/2)], [rc+(3*bwidth/4), starty]]
])

drawLines([
  [[rc, starty+rb], [rc+(bwidth/2), starty+rb+(rb/4)]],
  [[rc+bwidth, starty+rb], [rc+(bwidth/2), starty+rb+(rb/4)]]
])
  
const door = [
  [80, 53],
  [63,53],
  [63, 21],
  [88, 21],
  [88, 40],
  [80, 53] 
];

const window = [
  [79, 52],
  [64, 52],
  [64, 41],
  [85.5, 41],
  [79, 52]

];

const handle = [
  [66, 36],
  [70, 36],
  [70, 35],
  [66, 35],
  [66, 36]
];



finalLines.push(polyline);
finalLines.push(door);
finalLines.push(window);
finalLines.push(handle);
drawLines(finalLines)

const ts = new bt.Turtle()
  ts.jump([40, 20])
  ts.forward( 55)
drawLines(ts.lines())
